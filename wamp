#!/usr/bin/env node

// Copyright Joel Martin <github@martintribe.org>
// Licensed under MPL-2.0 (see ./LICENSE)
// https://github.com/kanaka/wam

const {readFileSync} = require('fs')
const {docopt} = require('docopt')
const {read_str, wam_eval, emit_module, empty_ctx} = require('./wamp.js')

// Parse arguments
doc = `
Usage:
    wamp [--memorySize=<PAGES>] [--memoryBase=<BYTES>] FILES...

Options:
    --memorySize=<PAGES>  memory size in 64K pages [default: 256]
    --memoryBase=<BYTES>  static memory offset bytes [default: 4096]
`

let opts = docopt(doc)
for (let k in opts) {
    if (k.startsWith('--')) {
        opts[k.slice(2)] = opts[k]
        delete opts[k]
    }
}

// Load and parse the files
let asts = []
for (let f of opts.FILES) {
    asts.push(read_str(readFileSync(f)))
}
//console.log("asts:", asts)

// Do macro evaluation/transformation
let ctx = empty_ctx()
asts = asts.map(a => wam_eval(a, ctx))

// Emit the resulting module
console.log(emit_module(asts, ctx, opts))

// vim:syntax=javascript
